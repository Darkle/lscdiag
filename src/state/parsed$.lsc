import combineLatest$ from 'observable-utils/lib/combineLatest'
import map$ from 'observable-utils/lib/map'
import toBehaviorSubject$ from 'observable-utils/lib/toBehaviorSubject'

import compilers from '../utils/compilers'
import createMarker from '../utils/createMarker'

export default parsed$(fixture) ->
  combineLatest$([fixture.source.code, fixture.config.get])
  ~map$(([source, config]) ->
    compiler = compilers[config.compiler]
    if not compiler: return {
      errorMessage: 'Invalid compiler setting'
      errorMarker: null
    }
    result = compiler.parse(source)
    // Push compilation errors to UI
    if result.errorMarker:
      aceMarker = createMarker('hlt_error', result.errorMarker)
      fixture.errorMarkers$.next([aceMarker])
    else:
      fixture.errorMarkers$.next(null)
    result
  )
  ~toBehaviorSubject$()
